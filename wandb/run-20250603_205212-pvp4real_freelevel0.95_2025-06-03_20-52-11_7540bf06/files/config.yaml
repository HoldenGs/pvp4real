_current_progress_remaining:
    value: 1
_custom_logger:
    value: "False"
_episode_num:
    value: 0
_episode_storage:
    value: None
_last_episode_starts:
    value: '[ True]'
_last_obs:
    value: |-
        [[0.29166666 0.29166666 0.5        0.01234568 0.5        0.5
          0.5        0.         0.5        0.55       0.5        0.
          0.5        0.5        0.95       0.5        0.         0.5
          0.5        1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.         1.         1.         1.         1.         1.
          1.        ]]
_last_original_obs:
    value: None
_logger:
    value: <pvp.sb3.common.logger.Logger object at 0x7dd0ee3a6fd0>
_n_updates:
    value: 0
_num_timesteps_at_start:
    value: 0
_total_timesteps:
    value: 50000
_vec_normalize_env:
    value: None
_wandb:
    value:
        cli_version: 0.20.0
        code_path: source-pvp4real_MetaUrban-pvp_experiments_metadrive_train_pvp_metadrive_fakehuman.py
        m: []
        python_version: 3.9.21
        t:
            "1":
                - 1
            "2":
                - 1
            "3":
                - 14
                - 16
                - 22
                - 35
                - 55
            "4": 3.9.21
            "5": 0.20.0
            "10":
                - 20
            "12": 0.20.0
            "13": linux-x86_64
action_noise:
    value: None
action_space:
    value: Box(-1.0, 1.0, (2,), float32)
actor:
    value: |-
        Actor(
          (features_extractor): FlattenExtractor(
            (flatten): Flatten(start_dim=1, end_dim=-1)
          )
          (mu): Sequential(
            (0): Linear(in_features=259, out_features=256, bias=True)
            (1): ReLU()
            (2): Linear(in_features=256, out_features=256, bias=True)
            (3): ReLU()
            (4): Linear(in_features=256, out_features=2, bias=True)
            (5): Tanh()
          )
        )
actor_target:
    value: |-
        Actor(
          (features_extractor): FlattenExtractor(
            (flatten): Flatten(start_dim=1, end_dim=-1)
          )
          (mu): Sequential(
            (0): Linear(in_features=259, out_features=256, bias=True)
            (1): ReLU()
            (2): Linear(in_features=256, out_features=256, bias=True)
            (3): ReLU()
            (4): Linear(in_features=256, out_features=2, bias=True)
            (5): Tanh()
          )
        )
algo:
    value:
        action_noise: null
        adaptive_batch_size: "False"
        add_bc_loss: "True"
        agent_data_ratio: 1
        batch_size: 1024
        bc_loss_weight: 1
        buffer_size: 50000
        create_eval_env: false
        device: auto
        env: <SharedControlMonitor<Monitor<FakeHumanEnv instance>>>
        gamma: 0.99
        learning_rate: 0.0001
        learning_starts: 10
        only_bc_loss: "False"
        optimize_memory_usage: true
        policy: pvp.sb3.td3.policies.TD3Policy
        policy_kwargs:
            net_arch:
                - 256
                - 256
        q_value_bound: 1
        replay_buffer_class: pvp.sb3.haco.haco_buffer.HACOReplayBuffer
        replay_buffer_kwargs:
            discard_reward: true
        seed: 0
        tau: 0.005
        tensorboard_log: logs/runs/pvp4real_freelevel0.95/pvp4real_freelevel0.95_2025-06-03_20-52-11_7540bf06
        train_freq:
            - 1
            - step
        use_balance_sample: true
        verbose: 2
        with_agent_proxy_value_loss: "True"
        with_human_proxy_value_loss: "True"
batch_size:
    value: 1024
buffer_size:
    value: 50000
cql_coefficient:
    value: 1
critic:
    value: |-
        ContinuousCritic(
          (features_extractor): FlattenExtractor(
            (flatten): Flatten(start_dim=1, end_dim=-1)
          )
          (qf0): Sequential(
            (0): Linear(in_features=261, out_features=256, bias=True)
            (1): ReLU()
            (2): Linear(in_features=256, out_features=256, bias=True)
            (3): ReLU()
            (4): Linear(in_features=256, out_features=1, bias=True)
          )
          (qf1): Sequential(
            (0): Linear(in_features=261, out_features=256, bias=True)
            (1): ReLU()
            (2): Linear(in_features=256, out_features=256, bias=True)
            (3): ReLU()
            (4): Linear(in_features=256, out_features=1, bias=True)
          )
        )
critic_target:
    value: |-
        ContinuousCritic(
          (features_extractor): FlattenExtractor(
            (flatten): Flatten(start_dim=1, end_dim=-1)
          )
          (qf0): Sequential(
            (0): Linear(in_features=261, out_features=256, bias=True)
            (1): ReLU()
            (2): Linear(in_features=256, out_features=256, bias=True)
            (3): ReLU()
            (4): Linear(in_features=256, out_features=1, bias=True)
          )
          (qf1): Sequential(
            (0): Linear(in_features=261, out_features=256, bias=True)
            (1): ReLU()
            (2): Linear(in_features=256, out_features=256, bias=True)
            (3): ReLU()
            (4): Linear(in_features=256, out_features=1, bias=True)
          )
        )
device:
    value: cuda
env:
    value: <pvp.sb3.common.vec_env.dummy_vec_env.DummyVecEnv object at 0x7dd0eed41cd0>
env_config:
    value:
        free_level: 0.95
        use_render: false
ep_info_buffer:
    value: deque([], maxlen=100)
ep_success_buffer:
    value: deque([], maxlen=100)
eval_env:
    value: None
exp_name:
    value: pvp4real_freelevel0.95
extra_config:
    value: '{''adaptive_batch_size'': False, ''add_bc_loss'': True, ''only_bc_loss'': False, ''with_human_proxy_value_loss'': True, ''with_agent_proxy_value_loss'': True, ''agent_data_ratio'': 1.0, ''bc_loss_weight'': 1.0}'
gamma:
    value: 0.99
gradient_steps:
    value: -1
human_data_buffer:
    value: <pvp.sb3.haco.haco_buffer.HACOReplayBuffer object at 0x7dd0ef3244f0>
learning_rate:
    value: 0.0001
learning_starts:
    value: 10
log_dir:
    value: logs/runs/pvp4real_freelevel0.95/pvp4real_freelevel0.95_2025-06-03_20-52-11_7540bf06
lr_schedule:
    value: <function constant_fn.<locals>.func at 0x7dd0ef79c670>
n_envs:
    value: 1
num_timesteps:
    value: 0
observation_space:
    value: Box(-0.0, 1.0, (259,), float32)
optimize_memory_usage:
    value: "True"
policy:
    value: |-
        TD3Policy(
          (actor): Actor(
            (features_extractor): FlattenExtractor(
              (flatten): Flatten(start_dim=1, end_dim=-1)
            )
            (mu): Sequential(
              (0): Linear(in_features=259, out_features=256, bias=True)
              (1): ReLU()
              (2): Linear(in_features=256, out_features=256, bias=True)
              (3): ReLU()
              (4): Linear(in_features=256, out_features=2, bias=True)
              (5): Tanh()
            )
          )
          (actor_target): Actor(
            (features_extractor): FlattenExtractor(
              (flatten): Flatten(start_dim=1, end_dim=-1)
            )
            (mu): Sequential(
              (0): Linear(in_features=259, out_features=256, bias=True)
              (1): ReLU()
              (2): Linear(in_features=256, out_features=256, bias=True)
              (3): ReLU()
              (4): Linear(in_features=256, out_features=2, bias=True)
              (5): Tanh()
            )
          )
          (critic): ContinuousCritic(
            (features_extractor): FlattenExtractor(
              (flatten): Flatten(start_dim=1, end_dim=-1)
            )
            (qf0): Sequential(
              (0): Linear(in_features=261, out_features=256, bias=True)
              (1): ReLU()
              (2): Linear(in_features=256, out_features=256, bias=True)
              (3): ReLU()
              (4): Linear(in_features=256, out_features=1, bias=True)
            )
            (qf1): Sequential(
              (0): Linear(in_features=261, out_features=256, bias=True)
              (1): ReLU()
              (2): Linear(in_features=256, out_features=256, bias=True)
              (3): ReLU()
              (4): Linear(in_features=256, out_features=1, bias=True)
            )
          )
          (critic_target): ContinuousCritic(
            (features_extractor): FlattenExtractor(
              (flatten): Flatten(start_dim=1, end_dim=-1)
            )
            (qf0): Sequential(
              (0): Linear(in_features=261, out_features=256, bias=True)
              (1): ReLU()
              (2): Linear(in_features=256, out_features=256, bias=True)
              (3): ReLU()
              (4): Linear(in_features=256, out_features=1, bias=True)
            )
            (qf1): Sequential(
              (0): Linear(in_features=261, out_features=256, bias=True)
              (1): ReLU()
              (2): Linear(in_features=256, out_features=256, bias=True)
              (3): ReLU()
              (4): Linear(in_features=256, out_features=1, bias=True)
            )
          )
        )
policy_class:
    value: <class 'pvp.sb3.td3.policies.TD3Policy'>
policy_delay:
    value: 2
policy_kwargs:
    value: '{''net_arch'': [256, 256]}'
q_value_bound:
    value: 1
remove_time_limit_termination:
    value: "False"
replay_buffer:
    value: <pvp.sb3.haco.haco_buffer.HACOReplayBuffer object at 0x7dd0ef3ceac0>
replay_buffer_class:
    value: <class 'pvp.sb3.haco.haco_buffer.HACOReplayBuffer'>
replay_buffer_kwargs:
    value: '{''discard_reward'': True}'
sde_sample_freq:
    value: -1
seed:
    value: 0
since_last_reset:
    value: 0
start_time:
    value: 1.7490091360642018e+09
target_noise_clip:
    value: 0.5
target_policy_noise:
    value: 0.2
tau:
    value: 0.005
tensorboard_log:
    value: logs/runs/pvp4real_freelevel0.95/pvp4real_freelevel0.95_2025-06-03_20-52-11_7540bf06
train_freq:
    value: 'TrainFreq(frequency=1, unit=<TrainFrequencyUnit.STEP: ''step''>)'
trial_name:
    value: pvp4real_freelevel0.95_2025-06-03_20-52-11_7540bf06
use_balance_sample:
    value: "True"
use_sde:
    value: "False"
use_sde_at_warmup:
    value: "False"
use_wandb:
    value: true
verbose:
    value: 2
